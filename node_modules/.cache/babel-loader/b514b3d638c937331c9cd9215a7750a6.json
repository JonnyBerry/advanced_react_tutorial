{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan1/projects/advanced_react_tutorial/src/tutorial/3-conditional-rendering/setup/2-short-circuit.js\";\nimport React, { useState } from 'react'; // short-circuit evaluation\n// ternary operator\n\nconst ShortCircuit = () => {\n  const [text, setText] = useState('');\n  const [isError, setIsError] = useState(false); //const firstValue = text || 'hello world';\n  //const secondValue = text && 'hello world';\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, text || 'john doe'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setIsError(!isError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"toggle error\"), isError && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Error...\"), isError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }, \"there is an error...\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"there is no error\")));\n};\n\nexport default ShortCircuit;","map":{"version":3,"sources":["/Users/jonathan1/projects/advanced_react_tutorial/src/tutorial/3-conditional-rendering/setup/2-short-circuit.js"],"names":["React","useState","ShortCircuit","text","setText","isError","setIsError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBH,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC,CAFyB,CAGxB;AACA;;AAED,sBACA,uDAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,IAAI,IAAI,UAAb,CAJF,eAKE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAuB,IAAA,OAAO,EAAE,MAAMG,UAAU,CAAC,CAACD,OAAF,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EASGA,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATd,EAUGA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAH,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAXJ,CADA;AAmBD,CAzBD;;AA2BA,eAAeH,YAAf","sourcesContent":["import React, { useState } from 'react';\n// short-circuit evaluation\n// ternary operator\n\nconst ShortCircuit = () => {\n  const [text,setText] = useState('');\n  const [isError, setIsError] = useState(false)\n   //const firstValue = text || 'hello world';\n   //const secondValue = text && 'hello world';\n\n  return (\n  <>\n    {/*<h1>{firstValue}</h1>\n    <h1>value: {secondValue}</h1>*/}\n     {/*if(){console.log('hello world')}*/}\n    <h1>{text || 'john doe'}</h1>\n    <button className='btn'onClick={() => setIsError(!isError)\n    }>\n      toggle error\n      </button>\n    {isError && <h1>Error...</h1>}\n    {isError ? <p>there is an error...</p>: (\n      <div>\n        <h2>there is no error</h2>\n      </div>\n    )}\n    {/*!text && <h1>hello world</h1>*/}\n  </>\n  );\n};\n\nexport default ShortCircuit;\n"]},"metadata":{},"sourceType":"module"}