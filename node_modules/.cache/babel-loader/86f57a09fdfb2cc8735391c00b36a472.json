{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan1/projects/advanced_react_tutorial/src/tutorial/2-useEffect/setup/1-useEffect-basics.js\";\nimport React, { useState, useEffect } from 'react'; // by default runs after every re-render\n// cleanup function\n// second parameter\n\nconst UseEffectBasics = () => {\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    console.log('call useEffect');\n\n    if (value >= 1) {\n      document.title = `New Messages(${value})`;\n    }\n  }, []);\n  console.log('render component');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, value), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setValue(value + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, \"click me\"));\n};\n\nexport default UseEffectBasics;","map":{"version":3,"sources":["/Users/jonathan1/projects/advanced_react_tutorial/src/tutorial/2-useEffect/setup/1-useEffect-basics.js"],"names":["React","useState","useEffect","UseEffectBasics","value","setValue","console","log","document","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC9B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,CAAD,CAAjC;AAEEC,EAAAA,SAAS,CAAC,MAAI;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAIH,KAAK,IAAI,CAAb,EAAgB;AAChBI,MAAAA,QAAQ,CAACC,KAAT,GAAiB,gBAAeL,KAAM,GAAtC;AACC;AACA,GALQ,EAKN,EALM,CAAT;AAOAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,sBAAO,uDACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADO,eAEP;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAE,MAAKC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFO,CAAP;AAMD,CAjBD;;AAmBA,eAAeD,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n// by default runs after every re-render\n// cleanup function\n// second parameter\nconst UseEffectBasics = () => {\nconst [value,setValue] = useState(0);\n\n  useEffect(()=>{\n  console.log('call useEffect');\n  if (value >= 1) {\n  document.title =`New Messages(${value})`;\n  }\n  }, []);\n\n  console.log('render component');\n  return <>\n  <h1>{value}</h1>\n  <button className=\"btn\" onClick={()=> setValue(value + 1)}>\n    click me\n  </button>\n  </>;\n};\n\nexport default UseEffectBasics;\n"]},"metadata":{},"sourceType":"module"}